{"ast":null,"code":"const API_BASE = \"https://nimbustodo.azurewebsites.net/api\";\n\n// ‚úÖ Create a new task\nexport const addTask = async task => {\n  console.log(\"üß© Adding task with data:\", task);\n  try {\n    const res = await fetch(`${API_BASE}/add_task`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(task) // ‚ùóSend full correct fields including userId\n    });\n    const data = await res.json();\n    console.log(\"‚úÖ Added task:\", data);\n    return data; // ‚úÖ return the created task (not call fetchUserTasks here)\n  } catch (error) {\n    console.error(\"‚ùå Error adding task:\", error);\n    throw error;\n  }\n};\n\n// ‚úÖ Delete a task by ID\nexport const deleteTask = async taskId => {\n  console.log(\"üóëÔ∏è Sending delete request for task:\", taskId);\n  const res = await fetch(`${API_BASE}/delete_task/${taskId}`, {\n    method: \"DELETE\"\n  });\n  const result = await res.text();\n  console.log(\"‚úÖ Azure responded to delete_task:\", result);\n  return result;\n};\n\n// ‚úÖ Edit a task by ID\n// ‚úÖ Edit a task by task ID\nexport const editTask = async (taskId, userId, updatedData) => {\n  try {\n    console.log(\"‚úèÔ∏è Sending update for task:\", taskId, \"with data:\", updatedData);\n    const res = await fetch(`${API_BASE}/edit_task/${taskId}?userId=${userId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updatedData)\n    });\n    if (!res.ok) {\n      const errorText = await res.text();\n      console.error(\"API Error Response:\", errorText);\n      throw new Error(`Failed to edit task: ${res.status} ${errorText}`);\n    }\n    const data = await res.json();\n    console.log(\"‚úÖ Azure responded to edit_task:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"‚ùå Error editing task:\", error);\n    throw error;\n  }\n};\n\n// ‚úÖ Fetch all tasks (filtered by userId)\nexport const fetchUserTasks = async userId => {\n  console.log(\"üì° Fetching all tasks for user:\", userId);\n  try {\n    const res = await fetch(`${API_BASE}/get_tasks?userId=${userId}`); // ‚ùó Add ?userId= param\n    const data = await res.json();\n    console.log(\"üì¶ Raw tasks from backend:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"‚ùå Error fetching tasks:\", error);\n    return [];\n  }\n};\n\n// ‚úÖ Create a focus session record\nexport const addFocusSession = async session => {\n  console.log(\"üß† Adding focus session:\", session);\n  try {\n    const res = await fetch(`${API_BASE}/add_focus_session`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(session)\n    });\n    const data = await res.json();\n    console.log(\"‚úÖ Focus session saved:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"‚ùå Error saving focus session:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE","addTask","task","console","log","res","fetch","method","headers","body","JSON","stringify","data","json","error","deleteTask","taskId","result","text","editTask","userId","updatedData","ok","errorText","Error","status","fetchUserTasks","addFocusSession","session"],"sources":["/Users/marieezoua/Documents/School Files/GSU/Spring 2025/CSC 4311 - Cloud Computing/Project/Nimbus-Todo/src/api/azureFunctions.js"],"sourcesContent":["\nconst API_BASE = \"https://nimbustodo.azurewebsites.net/api\";\n\n// ‚úÖ Create a new task\nexport const addTask = async (task) => {\n  console.log(\"üß© Adding task with data:\", task);\n\n  try {\n    const res = await fetch(`${API_BASE}/add_task`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(task), // ‚ùóSend full correct fields including userId\n    });\n\n    const data = await res.json();\n    console.log(\"‚úÖ Added task:\", data);\n    return data; // ‚úÖ return the created task (not call fetchUserTasks here)\n  } catch (error) {\n    console.error(\"‚ùå Error adding task:\", error);\n    throw error;\n  }\n};\n\n// ‚úÖ Delete a task by ID\nexport const deleteTask = async (taskId) => {\n  console.log(\"üóëÔ∏è Sending delete request for task:\", taskId);\n\n  const res = await fetch(`${API_BASE}/delete_task/${taskId}`, {\n    method: \"DELETE\",\n  });\n\n  const result = await res.text();\n  console.log(\"‚úÖ Azure responded to delete_task:\", result);\n  return result;\n};\n\n// ‚úÖ Edit a task by ID\n// ‚úÖ Edit a task by task ID\nexport const editTask = async (taskId, userId, updatedData) => {\n  try {\n    console.log(\n      \"‚úèÔ∏è Sending update for task:\",\n      taskId,\n      \"with data:\",\n      updatedData\n    );\n    const res = await fetch(\n      `${API_BASE}/edit_task/${taskId}?userId=${userId}`,\n      {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(updatedData),\n      }\n    );\n\n    if (!res.ok) {\n      const errorText = await res.text();\n      console.error(\"API Error Response:\", errorText);\n      throw new Error(`Failed to edit task: ${res.status} ${errorText}`);\n    }\n\n    const data = await res.json();\n    console.log(\"‚úÖ Azure responded to edit_task:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"‚ùå Error editing task:\", error);\n    throw error;\n  }\n};\n\n// ‚úÖ Fetch all tasks (filtered by userId)\nexport const fetchUserTasks = async (userId) => {\n  console.log(\"üì° Fetching all tasks for user:\", userId);\n\n  try {\n    const res = await fetch(`${API_BASE}/get_tasks?userId=${userId}`); // ‚ùó Add ?userId= param\n    const data = await res.json();\n    console.log(\"üì¶ Raw tasks from backend:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"‚ùå Error fetching tasks:\", error);\n    return [];\n  }\n};\n\n// ‚úÖ Create a focus session record\nexport const addFocusSession = async (session) => {\n  console.log(\"üß† Adding focus session:\", session);\n\n  try {\n    const res = await fetch(`${API_BASE}/add_focus_session`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(session),\n    });\n\n    const data = await res.json();\n    console.log(\"‚úÖ Focus session saved:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"‚ùå Error saving focus session:\", error);\n    throw error;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}