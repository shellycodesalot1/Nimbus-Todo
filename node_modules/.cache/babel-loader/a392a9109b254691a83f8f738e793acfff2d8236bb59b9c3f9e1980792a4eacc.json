{"ast":null,"code":"var _jsxFileName = \"/Users/marieezoua/Documents/School Files/GSU/Spring 2025/CSC 4311 - Cloud Computing/Project/Nimbus-Todo/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { msalInstance, loginRequest } from \"../msal\"; // <-- still from msal.js\nimport { EventType } from \"@azure/msal-browser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const login = async () => {\n    try {\n      await msalInstance.initialize(); // ✅ Ensure initialized before login\n      const response = await msalInstance.loginPopup(loginRequest);\n      const account = response.account;\n      msalInstance.setActiveAccount(account);\n      setUser({\n        name: account.name,\n        username: account.username,\n        localAccountId: account.localAccountId // ✅ Now added\n      });\n    } catch (err) {\n      console.error(\"❌ Login failed:\", err);\n    }\n  };\n  const logout = () => {\n    const currentAccount = msalInstance.getActiveAccount();\n    if (currentAccount) {\n      msalInstance.logoutPopup({\n        account: currentAccount,\n        postLogoutRedirectUri: \"/\"\n      });\n      setUser(null);\n    }\n  };\n  useEffect(() => {\n    const init = async () => {\n      try {\n        await msalInstance.initialize(); // ✅ Initialize on startup\n        const currentAccount = msalInstance.getAllAccounts()[0];\n        if (currentAccount) {\n          msalInstance.setActiveAccount(currentAccount);\n          setUser({\n            name: currentAccount.name,\n            username: currentAccount.username,\n            localAccountId: currentAccount.localAccountId // ✅ Now added\n          });\n        }\n      } catch (err) {\n        console.error(\"❌ MSAL failed to initialize:\", err);\n      }\n    };\n    init();\n    const callbackId = msalInstance.addEventCallback(event => {\n      if (event.eventType === EventType.LOGIN_SUCCESS && event.payload.account) {\n        msalInstance.setActiveAccount(event.payload.account);\n        setUser({\n          name: event.payload.account.name,\n          username: event.payload.account.username,\n          localAccountId: event.payload.account.localAccountId // ✅ Now added\n        });\n      }\n    });\n    return () => {\n      if (callbackId) msalInstance.removeEventCallback(callbackId);\n    };\n  }, []);\n  const value = {\n    user,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","msalInstance","loginRequest","EventType","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","login","initialize","response","loginPopup","account","setActiveAccount","name","username","localAccountId","err","console","error","logout","currentAccount","getActiveAccount","logoutPopup","postLogoutRedirectUri","init","getAllAccounts","callbackId","addEventCallback","event","eventType","LOGIN_SUCCESS","payload","removeEventCallback","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/marieezoua/Documents/School Files/GSU/Spring 2025/CSC 4311 - Cloud Computing/Project/Nimbus-Todo/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { msalInstance, loginRequest } from \"../msal\"; // <-- still from msal.js\nimport { EventType } from \"@azure/msal-browser\";\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  const login = async () => {\n    try {\n      await msalInstance.initialize(); // ✅ Ensure initialized before login\n      const response = await msalInstance.loginPopup(loginRequest);\n      const account = response.account;\n      msalInstance.setActiveAccount(account);\n      setUser({\n        name: account.name,\n        username: account.username,\n        localAccountId: account.localAccountId, // ✅ Now added\n      });\n    } catch (err) {\n      console.error(\"❌ Login failed:\", err);\n    }\n  };\n\n  const logout = () => {\n    const currentAccount = msalInstance.getActiveAccount();\n    if (currentAccount) {\n      msalInstance.logoutPopup({\n        account: currentAccount,\n        postLogoutRedirectUri: \"/\",\n      });\n      setUser(null);\n    }\n  };\n\n  useEffect(() => {\n    const init = async () => {\n      try {\n        await msalInstance.initialize(); // ✅ Initialize on startup\n        const currentAccount = msalInstance.getAllAccounts()[0];\n        if (currentAccount) {\n          msalInstance.setActiveAccount(currentAccount);\n          setUser({\n            name: currentAccount.name,\n            username: currentAccount.username,\n            localAccountId: currentAccount.localAccountId, // ✅ Now added\n          });\n        }\n      } catch (err) {\n        console.error(\"❌ MSAL failed to initialize:\", err);\n      }\n    };\n    init();\n\n    const callbackId = msalInstance.addEventCallback((event) => {\n      if (\n        event.eventType === EventType.LOGIN_SUCCESS &&\n        event.payload.account\n      ) {\n        msalInstance.setActiveAccount(event.payload.account);\n        setUser({\n          name: event.payload.account.name,\n          username: event.payload.account.username,\n          localAccountId: event.payload.account.localAccountId, // ✅ Now added\n        });\n      }\n    });\n\n    return () => {\n      if (callbackId) msalInstance.removeEventCallback(callbackId);\n    };\n  }, []);\n\n  const value = {\n    user,\n    login,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}