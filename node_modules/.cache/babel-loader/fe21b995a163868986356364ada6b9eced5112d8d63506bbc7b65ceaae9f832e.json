{"ast":null,"code":"// azure.js\nconst API_BASE = \"https://nimbustodo.azurewebsites.net/api\";\n\n// ✅ Fetch all tasks for a user\nexport const fetchUserTasks = async userId => {\n  try {\n    console.log(\"Fetching tasks for user:\", userId);\n    const res = await fetch(`${API_BASE}/get_tasks?userId=${userId}`);\n    if (!res.ok) {\n      const errorText = await res.text();\n      console.error(\"API Error Response:\", errorText);\n      throw new Error(`Failed to fetch tasks: ${res.status} ${errorText}`);\n    }\n    const data = await res.json();\n    console.log(\"Tasks fetched successfully:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching tasks:\", error);\n    return []; // Return empty array to prevent UI errors\n  }\n};\n\n// ✅ Add a new task\nexport const addTask = async taskData => {\n  try {\n    console.log(\"Adding task with data:\", taskData);\n    const res = await fetch(`${API_BASE}/add_task`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(taskData)\n    });\n    console.log(\"API Response Status:\", res.status);\n    if (!res.ok) {\n      const errorText = await res.text();\n      console.error(\"API Error Response:\", errorText);\n      throw new Error(`Failed to add task: ${res.status} ${errorText}`);\n    }\n    const data = await res.json();\n    console.log(\"Task added successfully:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"Error adding task:\", error);\n    throw error;\n  }\n};\n\n// ✅ Delete a task by task ID\nexport const deleteTask = async taskId => {\n  try {\n    console.log(\"Deleting task:\", taskId);\n    const res = await fetch(`${API_BASE}/delete_task/${taskId}`, {\n      method: \"DELETE\"\n    });\n    if (!res.ok) {\n      const errorText = await res.text();\n      console.error(\"API Error Response:\", errorText);\n      throw new Error(`Failed to delete task: ${res.status} ${errorText}`);\n    }\n    const responseText = await res.text();\n    console.log(\"Task deleted successfully:\", responseText);\n    return responseText;\n  } catch (error) {\n    console.error(\"Error deleting task:\", error);\n    throw error;\n  }\n};\n\n// ✅ Edit a task by task ID\nexport const editTask = async (taskId, updatedData) => {\n  try {\n    console.log(\"Updating task:\", taskId, \"with data:\", updatedData);\n    const res = await fetch(`${API_BASE}/edit_task/${taskId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updatedData)\n    });\n    if (!res.ok) {\n      const errorText = await res.text();\n      console.error(\"API Error Response:\", errorText);\n      throw new Error(`Failed to edit task: ${res.status} ${errorText}`);\n    }\n    const data = await res.json();\n    console.log(\"Task updated successfully:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"Error editing task:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE","fetchUserTasks","userId","console","log","res","fetch","ok","errorText","text","error","Error","status","data","json","addTask","taskData","method","headers","body","JSON","stringify","deleteTask","taskId","responseText","editTask","updatedData"],"sources":["/Users/marieezoua/Documents/School Files/GSU/Spring 2025/CSC 4311 - Cloud Computing/Project/Nimbus-Todo/src/azure.js"],"sourcesContent":["// azure.js\nconst API_BASE = \"https://nimbustodo.azurewebsites.net/api\";\n\n// ✅ Fetch all tasks for a user\nexport const fetchUserTasks = async (userId) => {\n  try {\n    console.log(\"Fetching tasks for user:\", userId);\n    const res = await fetch(`${API_BASE}/get_tasks?userId=${userId}`);\n\n    if (!res.ok) {\n      const errorText = await res.text();\n      console.error(\"API Error Response:\", errorText);\n      throw new Error(`Failed to fetch tasks: ${res.status} ${errorText}`);\n\n    }\n\n    const data = await res.json();\n    console.log(\"Tasks fetched successfully:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching tasks:\", error);\n    return []; // Return empty array to prevent UI errors\n  }\n};\n\n\n// ✅ Add a new task\nexport const addTask = async (taskData) => {\n  try {\n    console.log(\"Adding task with data:\", taskData);\n    const res = await fetch(`${API_BASE}/add_task`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(taskData),\n    });\n\n    console.log(\"API Response Status:\", res.status);\n\n    if (!res.ok) {\n      const errorText = await res.text();\n      console.error(\"API Error Response:\", errorText);\n      throw new Error(`Failed to add task: ${res.status} ${errorText}`);\n    }\n\n    const data = await res.json();\n    console.log(\"Task added successfully:\", data);\n    return data;\n\n  } catch (error) {\n    console.error(\"Error adding task:\", error);\n    throw error;\n  }\n};\n\n\n// ✅ Delete a task by task ID\nexport const deleteTask = async (taskId) => {\n  try {\n    console.log(\"Deleting task:\", taskId);\n    const res = await fetch(`${API_BASE}/delete_task/${taskId}`, {\n      method: \"DELETE\",\n    });\n\n    if (!res.ok) {\n      const errorText = await res.text();\n      console.error(\"API Error Response:\", errorText);\n      throw new Error(`Failed to delete task: ${res.status} ${errorText}`);\n    }\n\n    const responseText = await res.text();\n    console.log(\"Task deleted successfully:\", responseText);\n    return responseText;\n\n\n  } catch (error) {\n    console.error(\"Error deleting task:\", error);\n    throw error;\n  }\n};\n\n\n// ✅ Edit a task by task ID\nexport const editTask = async (taskId, updatedData) => {\n  try {\n    console.log(\"Updating task:\", taskId, \"with data:\", updatedData);\n    const res = await fetch(`${API_BASE}/edit_task/${taskId}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(updatedData),\n    });\n\n    if (!res.ok) {\n      const errorText = await res.text();\n      console.error(\"API Error Response:\", errorText);\n      throw new Error(`Failed to edit task: ${res.status} ${errorText}`);\n    }\n\n    const data = await res.json();\n    console.log(\"Task updated successfully:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"Error editing task:\", error);\n    throw error;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}