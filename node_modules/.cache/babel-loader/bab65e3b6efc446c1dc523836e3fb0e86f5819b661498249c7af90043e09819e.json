{"ast":null,"code":"var _jsxFileName = \"/Users/shelliciabethune/Nimbus-To-Do/Nimbus-Todo/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { msalInstance, loginRequest } from '../azure';\nimport { EventType } from '@azure/msal-browser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const login = async () => {\n    try {\n      const response = await msalInstance.loginPopup(loginRequest);\n      const account = response.account;\n      setUser({\n        name: account.name,\n        username: account.username\n      });\n    } catch (err) {\n      console.error('❌ Login failed:', err);\n    }\n  };\n  const logout = () => {\n    const currentAccount = msalInstance.getActiveAccount();\n    if (currentAccount) {\n      msalInstance.logoutPopup({\n        account: currentAccount,\n        postLogoutRedirectUri: '/'\n      });\n      setUser(null);\n    }\n  };\n  useEffect(() => {\n    const currentAccount = msalInstance.getAllAccounts()[0];\n    if (currentAccount) {\n      setUser({\n        name: currentAccount.name,\n        username: currentAccount.username\n      });\n    }\n    const callbackId = msalInstance.addEventCallback(event => {\n      if (event.eventType === EventType.LOGIN_SUCCESS && event.payload.account) {\n        msalInstance.setActiveAccount(event.payload.account);\n        setUser({\n          name: event.payload.account.name,\n          username: event.payload.account.username\n        });\n      }\n    });\n    return () => {\n      if (callbackId) msalInstance.removeEventCallback(callbackId);\n    };\n  }, []);\n  const value = {\n    user,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","msalInstance","loginRequest","EventType","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","login","response","loginPopup","account","name","username","err","console","error","logout","currentAccount","getActiveAccount","logoutPopup","postLogoutRedirectUri","getAllAccounts","callbackId","addEventCallback","event","eventType","LOGIN_SUCCESS","payload","setActiveAccount","removeEventCallback","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/shelliciabethune/Nimbus-To-Do/Nimbus-Todo/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { msalInstance, loginRequest } from '../azure';\nimport { EventType } from '@azure/msal-browser';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  const login = async () => {\n    try {\n      const response = await msalInstance.loginPopup(loginRequest);\n      const account = response.account;\n      setUser({\n        name: account.name,\n        username: account.username,\n      });\n    } catch (err) {\n      console.error('❌ Login failed:', err);\n    }\n  };\n\n  const logout = () => {\n    const currentAccount = msalInstance.getActiveAccount();\n    if (currentAccount) {\n      msalInstance.logoutPopup({\n        account: currentAccount,\n        postLogoutRedirectUri: '/',\n      });\n      setUser(null);\n    }\n  };\n\n  useEffect(() => {\n    const currentAccount = msalInstance.getAllAccounts()[0];\n    if (currentAccount) {\n      setUser({\n        name: currentAccount.name,\n        username: currentAccount.username,\n      });\n    }\n\n    const callbackId = msalInstance.addEventCallback((event) => {\n      if (event.eventType === EventType.LOGIN_SUCCESS && event.payload.account) {\n        msalInstance.setActiveAccount(event.payload.account);\n        setUser({\n          name: event.payload.account.name,\n          username: event.payload.account.username,\n        });\n      }\n    });\n\n    return () => {\n      if (callbackId) msalInstance.removeEventCallback(callbackId);\n    };\n  }, []);\n\n  const value = {\n    user,\n    login,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}