{"ast":null,"code":"// azure.js\nconst API_BASE = \"https://your-azure-api-endpoint/api\"; // <-- replace with your API base\n\n// âœ… Add a new task\nexport const addTask = async taskData => {\n  try {\n    const res = await fetch(`${API_BASE}/add_task`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        description: taskData.description,\n        priority: taskData.priority,\n        status: taskData.status || \"To Do\",\n        // optional\n        userId: taskData.userId // ðŸ†• send userId\n      })\n    });\n    if (!res.ok) {\n      throw new Error(\"Failed to add task\");\n    }\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error adding task:\", error);\n    throw error;\n  }\n};\n\n// âœ… Fetch all tasks for a user\nexport const fetchUserTasks = async userId => {\n  try {\n    const res = await fetch(`${API_BASE}/get_tasks?userId=${userId}`);\n    if (!res.ok) {\n      throw new Error(\"Failed to fetch tasks\");\n    }\n    const data = await res.json();\n    return data; // list of tasks for this user\n  } catch (error) {\n    console.error(\"Error fetching tasks:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_BASE","addTask","taskData","res","fetch","method","headers","body","JSON","stringify","description","priority","status","userId","ok","Error","data","json","error","console","fetchUserTasks"],"sources":["/Users/marieezoua/Documents/School Files/GSU/Spring 2025/CSC 4311 - Cloud Computing/Project/Nimbus-Todo/src/azure.js"],"sourcesContent":["// azure.js\nconst API_BASE = \"https://your-azure-api-endpoint/api\"; // <-- replace with your API base\n\n// âœ… Add a new task\nexport const addTask = async (taskData) => {\n  try {\n    const res = await fetch(`${API_BASE}/add_task`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        description: taskData.description,\n        priority: taskData.priority,\n        status: taskData.status || \"To Do\", // optional\n        userId: taskData.userId,  // ðŸ†• send userId\n      }),\n    });\n\n    if (!res.ok) {\n      throw new Error(\"Failed to add task\");\n    }\n\n    const data = await res.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error adding task:\", error);\n    throw error;\n  }\n};\n\n// âœ… Fetch all tasks for a user\nexport const fetchUserTasks = async (userId) => {\n  try {\n    const res = await fetch(`${API_BASE}/get_tasks?userId=${userId}`);\n\n    if (!res.ok) {\n      throw new Error(\"Failed to fetch tasks\");\n    }\n\n    const data = await res.json();\n    return data; // list of tasks for this user\n  } catch (error) {\n    console.error(\"Error fetching tasks:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,qCAAqC,CAAC,CAAC;;AAExD;AACA,OAAO,MAAMC,OAAO,GAAG,MAAOC,QAAQ,IAAK;EACzC,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,WAAW,EAAE;MAC9CK,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,WAAW,EAAER,QAAQ,CAACQ,WAAW;QACjCC,QAAQ,EAAET,QAAQ,CAACS,QAAQ;QAC3BC,MAAM,EAAEV,QAAQ,CAACU,MAAM,IAAI,OAAO;QAAE;QACpCC,MAAM,EAAEX,QAAQ,CAACW,MAAM,CAAG;MAC5B,CAAC;IACH,CAAC,CAAC;IAEF,IAAI,CAACV,GAAG,CAACW,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;IACvC;IAEA,MAAMC,IAAI,GAAG,MAAMb,GAAG,CAACc,IAAI,CAAC,CAAC;IAC7B,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,cAAc,GAAG,MAAOP,MAAM,IAAK;EAC9C,IAAI;IACF,MAAMV,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGJ,QAAQ,qBAAqBa,MAAM,EAAE,CAAC;IAEjE,IAAI,CAACV,GAAG,CAACW,EAAE,EAAE;MACX,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IAEA,MAAMC,IAAI,GAAG,MAAMb,GAAG,CAACc,IAAI,CAAC,CAAC;IAC7B,OAAOD,IAAI,CAAC,CAAC;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}