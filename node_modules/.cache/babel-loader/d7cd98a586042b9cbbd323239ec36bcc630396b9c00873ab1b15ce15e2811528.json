{"ast":null,"code":"const baseUrl = \"https://nimbustodo.azurewebsites.net/api\";\n\n// üü¢ Add Task\nexport const createNewTask = async taskData => {\n  console.log(\"üì§ Sending new task:\", taskData);\n  try {\n    const res = await fetch(`${baseUrl}/add_task`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(taskData)\n    });\n    const data = await res.json();\n    console.log(\"‚úÖ Task created:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"‚ùå Error creating task:\", error);\n    throw error;\n  }\n};\n\n// üìã Get All Tasks\nexport const fetchUserTasks = async () => {\n  console.log(\"üì• Fetching all tasks...\");\n  try {\n    const res = await fetch(`${baseUrl}/get_tasks`);\n    const data = await res.json();\n    console.log(\"üìÑ Tasks received:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"‚ùå Error fetching tasks:\", error);\n    throw error;\n  }\n};\n\n// üóëÔ∏è Delete Task\nexport const deleteTask = async taskId => {\n  console.log(`üóëÔ∏è Deleting task with ID: ${taskId}`);\n  try {\n    const res = await fetch(`${baseUrl}/delete_task/${taskId}`, {\n      method: \"DELETE\"\n    });\n    const text = await res.text();\n    console.log(\"üßπ Delete response:\", text);\n    return text;\n  } catch (error) {\n    console.error(\"‚ùå Error deleting task:\", error);\n    throw error;\n  }\n};\n\n// üìù Edit Task\nexport const editTask = async (taskId, updates) => {\n  console.log(`‚úèÔ∏è Editing task ${taskId} with:`, updates);\n  try {\n    const res = await fetch(`${baseUrl}/edit_task/${taskId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(updates)\n    });\n    const data = await res.json();\n    console.log(\"‚úÖ Task updated:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"‚ùå Error editing task:\", error);\n    throw error;\n  }\n};\n\n// üîç Get Single Task (optional)\nexport const getTaskById = async taskId => {\n  console.log(`üîé Fetching task with ID: ${taskId}`);\n  try {\n    const res = await fetch(`${baseUrl}/get_task/${taskId}`);\n    const data = await res.json();\n    console.log(\"üìÑ Task data:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"‚ùå Error fetching task:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["baseUrl","createNewTask","taskData","console","log","res","fetch","method","headers","body","JSON","stringify","data","json","error","fetchUserTasks","deleteTask","taskId","text","editTask","updates","getTaskById"],"sources":["/Users/marieezoua/Documents/School Files/GSU/Spring 2025/CSC 4311 - Cloud Computing/Project/Nimbus-Todo/src/api/azureFunctions.js"],"sourcesContent":["const baseUrl = \"https://nimbustodo.azurewebsites.net/api\";\n\n// üü¢ Add Task\nexport const createNewTask = async (taskData) => {\n  console.log(\"üì§ Sending new task:\", taskData);\n\n  try {\n    const res = await fetch(`${baseUrl}/add_task`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(taskData),\n    });\n\n    const data = await res.json();\n    console.log(\"‚úÖ Task created:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"‚ùå Error creating task:\", error);\n    throw error;\n  }\n};\n\n// üìã Get All Tasks\nexport const fetchUserTasks = async () => {\n  console.log(\"üì• Fetching all tasks...\");\n\n  try {\n    const res = await fetch(`${baseUrl}/get_tasks`);\n    const data = await res.json();\n    console.log(\"üìÑ Tasks received:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"‚ùå Error fetching tasks:\", error);\n    throw error;\n  }\n};\n\n// üóëÔ∏è Delete Task\nexport const deleteTask = async (taskId) => {\n  console.log(`üóëÔ∏è Deleting task with ID: ${taskId}`);\n\n  try {\n    const res = await fetch(`${baseUrl}/delete_task/${taskId}`, {\n      method: \"DELETE\",\n    });\n\n    const text = await res.text();\n    console.log(\"üßπ Delete response:\", text);\n    return text;\n  } catch (error) {\n    console.error(\"‚ùå Error deleting task:\", error);\n    throw error;\n  }\n};\n\n// üìù Edit Task\nexport const editTask = async (taskId, updates) => {\n  console.log(`‚úèÔ∏è Editing task ${taskId} with:`, updates);\n\n  try {\n    const res = await fetch(`${baseUrl}/edit_task/${taskId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(updates),\n    });\n\n    const data = await res.json();\n    console.log(\"‚úÖ Task updated:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"‚ùå Error editing task:\", error);\n    throw error;\n  }\n};\n\n// üîç Get Single Task (optional)\nexport const getTaskById = async (taskId) => {\n  console.log(`üîé Fetching task with ID: ${taskId}`);\n\n  try {\n    const res = await fetch(`${baseUrl}/get_task/${taskId}`);\n    const data = await res.json();\n    console.log(\"üìÑ Task data:\", data);\n    return data;\n  } catch (error) {\n    console.error(\"‚ùå Error fetching task:\", error);\n    throw error;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}