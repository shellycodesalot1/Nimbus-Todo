{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useAuth}from'./context/AuthContext';import{useNavigate}from'react-router-dom';import{addTask,deleteTask,editTask}from'./api/azureFunctions';import{DragDropContext,Droppable,Draggable}from'@hello-pangea/dnd';import'./Dashboard.css';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const Dashboard=()=>{const{user,logout}=useAuth();const navigate=useNavigate();const[tasks,setTasks]=useState([]);const[newTask,setNewTask]=useState({description:'',priority:'Medium'// Matches backend expectation\n});const[error,setError]=useState(null);const[isLoading,setIsLoading]=useState(false);// Load tasks on component mount (you'll need to implement this endpoint)\nuseEffect(()=>{const fetchTasks=async()=>{try{// You'll need to implement this endpoint in your Azure Functions\nconst response=await fetch('https://nimbustodo.azurewebsites.net/api/get_tasks');const data=await response.json();// Map backend tasks to frontend format (add status based on completed)\nsetTasks(data.map(task=>({...task,status:task.completed?'Done':'To Do'// Default status mapping\n})));}catch(err){console.error('Failed to fetch tasks:',err);}};fetchTasks();},[]);const handleLogout=async()=>{await logout();navigate('/login');};const handleAddTask=async e=>{e.preventDefault();setIsLoading(true);setError(null);if(!newTask.description.trim()){setError('Task description cannot be empty');setIsLoading(false);return;}try{// Send only what backend expects\nconst taskToSend={description:newTask.description,priority:newTask.priority};const created=await addTask(taskToSend);// Add frontend-specific status (not provided by backend)\nsetTasks([...tasks,{...created,status:'To Do'// Default status for new tasks\n}]);setNewTask({description:'',priority:'Medium'});}catch(err){console.error('Failed to add task:',err);setError(err.message||'Failed to add task');}finally{setIsLoading(false);}};const handleDelete=async taskId=>{try{await deleteTask(taskId);setTasks(tasks.filter(task=>task.id!==taskId));}catch(err){console.error('Failed to delete task:',err);setError(err.message||'Failed to delete task');}};const handleUpdateStatus=async(taskId,newStatus)=>{try{// Convert frontend status to backend completed boolean\nconst completed=newStatus==='Done';const updated=await editTask(taskId,{completed});// Update local state\nsetTasks(tasks.map(task=>task.id===taskId?{...task,status:newStatus,completed// Keep in sync with backend\n}:task));}catch(err){console.error('Failed to update task status:',err);setError(err.message||'Failed to update task');}};const onDragEnd=result=>{const{source,destination,draggableId}=result;// No change if dropped outside or in same column\nif(!destination||source.droppableId===destination.droppableId)return;handleUpdateStatus(draggableId,destination.droppableId);};const categories=['To Do','In Progress','Done'];return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard\",children:[/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Welcome, \",(user===null||user===void 0?void 0:user.name)||'User']}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,children:\"Logout\"})]}),/*#__PURE__*/_jsxs(\"form\",{className:\"task-form\",onSubmit:handleAddTask,children:[error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Task description\",value:newTask.description,onChange:e=>setNewTask({...newTask,description:e.target.value}),onKeyDown:e=>e.key==='Enter'&&handleAddTask(e)}),/*#__PURE__*/_jsxs(\"select\",{value:newTask.priority,onChange:e=>setNewTask({...newTask,priority:e.target.value}),children:[/*#__PURE__*/_jsx(\"option\",{value:\"Low\",children:\"Low\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Medium\",children:\"Medium\"}),/*#__PURE__*/_jsx(\"option\",{value:\"High\",children:\"High\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:isLoading,children:isLoading?'Adding...':'Add Task'})]}),/*#__PURE__*/_jsx(DragDropContext,{onDragEnd:onDragEnd,children:/*#__PURE__*/_jsx(\"div\",{className:\"task-columns\",children:categories.map(category=>/*#__PURE__*/_jsx(Droppable,{droppableId:category,children:provided=>/*#__PURE__*/_jsxs(\"div\",{className:\"task-column\",...provided.droppableProps,ref:provided.innerRef,children:[/*#__PURE__*/_jsx(\"h2\",{children:category}),tasks.filter(task=>task.status===category).map((task,index)=>/*#__PURE__*/_jsx(Draggable,{draggableId:task.id,index:index,children:provided=>/*#__PURE__*/_jsxs(\"div\",{className:\"task-card\",ref:provided.innerRef,...provided.draggableProps,...provided.dragHandleProps,children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:task.description})}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Priority: \",task.priority]}),/*#__PURE__*/_jsx(\"div\",{className:\"task-actions\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDelete(task.id),children:\"Delete\"})})]})},task.id)),provided.placeholder]})},category))})})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useAuth","useNavigate","addTask","deleteTask","editTask","DragDropContext","Droppable","Draggable","jsxs","_jsxs","jsx","_jsx","Dashboard","user","logout","navigate","tasks","setTasks","newTask","setNewTask","description","priority","error","setError","isLoading","setIsLoading","fetchTasks","response","fetch","data","json","map","task","status","completed","err","console","handleLogout","handleAddTask","e","preventDefault","trim","taskToSend","created","message","handleDelete","taskId","filter","id","handleUpdateStatus","newStatus","updated","onDragEnd","result","source","destination","draggableId","droppableId","categories","className","children","name","onClick","onSubmit","type","placeholder","value","onChange","target","onKeyDown","key","disabled","category","provided","droppableProps","ref","innerRef","index","draggableProps","dragHandleProps"],"sources":["/Users/shelliciabethune/Nimbus-To-Do/Nimbus-Todo/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from './context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { addTask, deleteTask, editTask } from './api/azureFunctions';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport './Dashboard.css';\n\nconst Dashboard = () => {\n  const { user, logout } = useAuth();\n  const navigate = useNavigate();\n\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState({ \n    description: '', \n    priority: 'Medium' // Matches backend expectation\n  });\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  // Load tasks on component mount (you'll need to implement this endpoint)\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        // You'll need to implement this endpoint in your Azure Functions\n        const response = await fetch('https://nimbustodo.azurewebsites.net/api/get_tasks');\n        const data = await response.json();\n        // Map backend tasks to frontend format (add status based on completed)\n        setTasks(data.map(task => ({\n          ...task,\n          status: task.completed ? 'Done' : 'To Do' // Default status mapping\n        })));\n      } catch (err) {\n        console.error('Failed to fetch tasks:', err);\n      }\n    };\n    \n    fetchTasks();\n  }, []);\n\n  const handleLogout = async () => {\n    await logout();\n    navigate('/login');\n  };\n\n  const handleAddTask = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(null);\n    \n    if (!newTask.description.trim()) {\n      setError('Task description cannot be empty');\n      setIsLoading(false);\n      return;\n    }\n    \n    try {\n      // Send only what backend expects\n      const taskToSend = {\n        description: newTask.description,\n        priority: newTask.priority\n      };\n      \n      const created = await addTask(taskToSend);\n      \n      // Add frontend-specific status (not provided by backend)\n      setTasks([...tasks, { \n        ...created, \n        status: 'To Do' // Default status for new tasks\n      }]);\n      \n      setNewTask({ description: '', priority: 'Medium' });\n    } catch (err) {\n      console.error('Failed to add task:', err);\n      setError(err.message || 'Failed to add task');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleDelete = async (taskId) => {\n    try {\n      await deleteTask(taskId);\n      setTasks(tasks.filter((task) => task.id !== taskId));\n    } catch (err) {\n      console.error('Failed to delete task:', err);\n      setError(err.message || 'Failed to delete task');\n    }\n  };\n\n  const handleUpdateStatus = async (taskId, newStatus) => {\n    try {\n      // Convert frontend status to backend completed boolean\n      const completed = newStatus === 'Done';\n      const updated = await editTask(taskId, { completed });\n      \n      // Update local state\n      setTasks(tasks.map((task) => \n        task.id === taskId ? { \n          ...task, \n          status: newStatus,\n          completed // Keep in sync with backend\n        } : task\n      ));\n    } catch (err) {\n      console.error('Failed to update task status:', err);\n      setError(err.message || 'Failed to update task');\n    }\n  };\n\n  const onDragEnd = (result) => {\n    const { source, destination, draggableId } = result;\n    \n    // No change if dropped outside or in same column\n    if (!destination || source.droppableId === destination.droppableId) return;\n    \n    handleUpdateStatus(draggableId, destination.droppableId);\n  };\n\n  const categories = ['To Do', 'In Progress', 'Done'];\n\n  return (\n    <div className=\"dashboard\">\n      <header>\n        <h1>Welcome, {user?.name || 'User'}</h1>\n        <button onClick={handleLogout}>Logout</button>\n      </header>\n\n      <form className=\"task-form\" onSubmit={handleAddTask}>\n        {error && <div className=\"error-message\">{error}</div>}\n        <input\n          type=\"text\"\n          placeholder=\"Task description\"\n          value={newTask.description}\n          onChange={(e) => setNewTask({ ...newTask, description: e.target.value })}\n          onKeyDown={(e) => e.key === 'Enter' && handleAddTask(e)}\n        />\n        <select\n          value={newTask.priority}\n          onChange={(e) => setNewTask({ ...newTask, priority: e.target.value })}\n        >\n          <option value=\"Low\">Low</option>\n          <option value=\"Medium\">Medium</option>\n          <option value=\"High\">High</option>\n        </select>\n        <button type=\"submit\" disabled={isLoading}>\n          {isLoading ? 'Adding...' : 'Add Task'}\n        </button>\n      </form>\n\n      <DragDropContext onDragEnd={onDragEnd}>\n        <div className=\"task-columns\">\n          {categories.map((category) => (\n            <Droppable droppableId={category} key={category}>\n              {(provided) => (\n                <div\n                  className=\"task-column\"\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                >\n                  <h2>{category}</h2>\n                  {tasks\n                    .filter((task) => task.status === category)\n                    .map((task, index) => (\n                      <Draggable draggableId={task.id} index={index} key={task.id}>\n                        {(provided) => (\n                          <div\n                            className=\"task-card\"\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                          >\n                            <p><strong>{task.description}</strong></p>\n                            <p>Priority: {task.priority}</p>\n                            <div className=\"task-actions\">\n                              <button onClick={() => handleDelete(task.id)}>Delete</button>\n                            </div>\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n          ))}\n        </div>\n      </DragDropContext>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}