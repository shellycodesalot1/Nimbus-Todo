{"ast":null,"code":"// msal.js\nimport { PublicClientApplication } from \"@azure/msal-browser\";\nconst msalConfig = {\n  auth: {\n    clientId: \"YOUR-CLIENT-ID\",\n    // <-- from Azure App Registration\n    authority: \"https://login.microsoftonline.com/common\",\n    redirectUri: \"http://localhost:3000\" // <-- MUST match Azure portal exactly\n  },\n  cache: {\n    cacheLocation: \"sessionStorage\",\n    // or \"localStorage\" if you prefer\n    storeAuthStateInCookie: false\n  }\n};\nexport const msalInstance = new PublicClientApplication(msalConfig);\nexport const loginRequest = {\n  scopes: [\"User.Read\"]\n};\nexport const handleMicrosoftLogin = async () => {\n  try {\n    const response = await msalInstance.loginPopup(loginRequest);\n    return response.account;\n  } catch (error) {\n    console.error(\"Microsoft login failed:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["PublicClientApplication","msalConfig","auth","clientId","authority","redirectUri","cache","cacheLocation","storeAuthStateInCookie","msalInstance","loginRequest","scopes","handleMicrosoftLogin","response","loginPopup","account","error","console"],"sources":["/Users/marieezoua/Documents/School Files/GSU/Spring 2025/CSC 4311 - Cloud Computing/Project/Nimbus-Todo/src/msal.js"],"sourcesContent":["// msal.js\nimport { PublicClientApplication } from \"@azure/msal-browser\";\n\nconst msalConfig = {\n  auth: {\n    clientId: \"YOUR-CLIENT-ID\", // <-- from Azure App Registration\n    authority: \"https://login.microsoftonline.com/common\",\n    redirectUri: \"http://localhost:3000\", // <-- MUST match Azure portal exactly\n  },\n  cache: {\n    cacheLocation: \"sessionStorage\", // or \"localStorage\" if you prefer\n    storeAuthStateInCookie: false,\n  },\n};\n\nexport const msalInstance = new PublicClientApplication(msalConfig);\n\nexport const loginRequest = {\n  scopes: [\"User.Read\"],\n};\n\nexport const handleMicrosoftLogin = async () => {\n  try {\n    const response = await msalInstance.loginPopup(loginRequest);\n    return response.account;\n  } catch (error) {\n    console.error(\"Microsoft login failed:\", error);\n    throw error;\n  }\n};\n"],"mappings":"AAAA;AACA,SAASA,uBAAuB,QAAQ,qBAAqB;AAE7D,MAAMC,UAAU,GAAG;EACjBC,IAAI,EAAE;IACJC,QAAQ,EAAE,gBAAgB;IAAE;IAC5BC,SAAS,EAAE,0CAA0C;IACrDC,WAAW,EAAE,uBAAuB,CAAE;EACxC,CAAC;EACDC,KAAK,EAAE;IACLC,aAAa,EAAE,gBAAgB;IAAE;IACjCC,sBAAsB,EAAE;EAC1B;AACF,CAAC;AAED,OAAO,MAAMC,YAAY,GAAG,IAAIT,uBAAuB,CAACC,UAAU,CAAC;AAEnE,OAAO,MAAMS,YAAY,GAAG;EAC1BC,MAAM,EAAE,CAAC,WAAW;AACtB,CAAC;AAED,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;EAC9C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,YAAY,CAACK,UAAU,CAACJ,YAAY,CAAC;IAC5D,OAAOG,QAAQ,CAACE,OAAO;EACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}