{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from'react';import{msalInstance,loginRequest}from'../azure';import{EventType}from'@azure/msal-browser';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const login=async()=>{try{const response=await msalInstance.loginPopup(loginRequest);const account=response.account;setUser({name:account.name,username:account.username});}catch(err){console.error('❌ Login failed:',err);}};const logout=()=>{const currentAccount=msalInstance.getActiveAccount();if(currentAccount){msalInstance.logoutPopup({account:currentAccount,postLogoutRedirectUri:'/'});setUser(null);}};useEffect(()=>{const currentAccount=msalInstance.getAllAccounts()[0];if(currentAccount){setUser({name:currentAccount.name,username:currentAccount.username});}const callbackId=msalInstance.addEventCallback(event=>{if(event.eventType===EventType.LOGIN_SUCCESS&&event.payload.account){msalInstance.setActiveAccount(event.payload.account);setUser({name:event.payload.account.name,username:event.payload.account.username});}});return()=>{if(callbackId)msalInstance.removeEventCallback(callbackId);};},[]);const value={user,login,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","msalInstance","loginRequest","EventType","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","login","response","loginPopup","account","name","username","err","console","error","logout","currentAccount","getActiveAccount","logoutPopup","postLogoutRedirectUri","getAllAccounts","callbackId","addEventCallback","event","eventType","LOGIN_SUCCESS","payload","setActiveAccount","removeEventCallback","value","Provider","useAuth","context","Error"],"sources":["/Users/shelliciabethune/Nimbus-To-Do/Nimbus-Todo/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\nimport { msalInstance, loginRequest } from '../azure';\nimport { EventType } from '@azure/msal-browser';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  const login = async () => {\n    try {\n      const response = await msalInstance.loginPopup(loginRequest);\n      const account = response.account;\n      setUser({\n        name: account.name,\n        username: account.username,\n      });\n    } catch (err) {\n      console.error('❌ Login failed:', err);\n    }\n  };\n\n  const logout = () => {\n    const currentAccount = msalInstance.getActiveAccount();\n    if (currentAccount) {\n      msalInstance.logoutPopup({\n        account: currentAccount,\n        postLogoutRedirectUri: '/',\n      });\n      setUser(null);\n    }\n  };\n\n  useEffect(() => {\n    const currentAccount = msalInstance.getAllAccounts()[0];\n    if (currentAccount) {\n      setUser({\n        name: currentAccount.name,\n        username: currentAccount.username,\n      });\n    }\n\n    const callbackId = msalInstance.addEventCallback((event) => {\n      if (event.eventType === EventType.LOGIN_SUCCESS && event.payload.account) {\n        msalInstance.setActiveAccount(event.payload.account);\n        setUser({\n          name: event.payload.account.name,\n          username: event.payload.account.username,\n        });\n      }\n    });\n\n    return () => {\n      if (callbackId) msalInstance.removeEventCallback(callbackId);\n    };\n  }, []);\n\n  const value = {\n    user,\n    login,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}